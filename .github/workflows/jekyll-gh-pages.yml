# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - resume/**
      - .github/workflows/jekyll-gh-pages.yml

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./resume
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  pdf:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Generate GitHub Token
        id: token
        uses: getsentry/action-github-app-token@97c9e23528286821f97fba885c1b1123284b29cc #v2.0.0
        with:
          app_id: ${{ secrets.AUTOMATION_BOT_ID }}
          private_key: ${{ secrets.AUTOMATION_BOT_KEY }}
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac #v4
        with:
          token: ${{ steps.token.outputs.token }}
      - name: Generate PDF
        uses: docker://pandoc/latex:3.1-ubuntu
        with:
          entrypoint: sh
          args: -c "apt update && apt install wkhtmltopdf --no-install-recommends --no-install-suggests -y && pandoc -f html-native_divs -o portfolio/cv.pdf --pdf-engine=wkhtmltopdf ${{ needs.deploy.outputs.page_url }}"
      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          allowUpdates: true
          replacesArtifacts: true
          artifacts: portfolio/cv.pdf
          name: Resume
          token: steps.token.outputs.token